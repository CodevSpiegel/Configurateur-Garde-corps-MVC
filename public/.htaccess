# ============================================================================
# üìÑ public/.htaccess
# ============================================================================
# ‚ú® OBJECTIF :
# Ce fichier permet d‚Äôavoir des **URL propres et lisibles** dans ton site MVC.
#
# Exemple :
#   ‚ùå Sans .htaccess ‚Üí http://localhost/mon_mvc/public/index.php?url=home/index
#   ‚úÖ Avec .htaccess ‚Üí http://localhost/mon_mvc/public/home/index
#
# Le but est de rediriger **toutes les requ√™tes** vers index.php
# sauf si le fichier demand√© existe r√©ellement (ex: une image, un script, un CSS).
# ============================================================================


# ----------------------------------------------------------------------------
# üö´ D√©sactivation de "Multiviews"
# ----------------------------------------------------------------------------
# Par d√©faut, Apache peut "deviner" un fichier en ignorant son extension
# (ex: appeler /home peut charger home.php). 
# Cela cause souvent des erreurs ou des collisions.
# On d√©sactive donc cette option pour plus de contr√¥le.
Options -Multiviews


# ----------------------------------------------------------------------------
# ‚úÖ V√©rifie que le module de r√©√©criture est activ√©
# ----------------------------------------------------------------------------
# Le module mod_rewrite doit √™tre activ√© dans Apache pour que les URL propres
# fonctionnent. Sinon, rien ne sera r√©√©crit.
<IfModule mod_rewrite.c>

    # ------------------------------------------------------
    # üîß Activation du moteur de r√©√©criture d‚ÄôURL
    # ------------------------------------------------------
    RewriteEngine On


    # ------------------------------------------------------
    # üß≠ Chemin de base (utile si ton site est dans un sous-dossier)
    # ------------------------------------------------------
    # Exemple :
    #   Si ton projet est accessible via :
    #     http://localhost/mon_mvc/public/
    #   Alors d√©commente la ligne ci-dessous et adapte :
    #     RewriteBase /mon_mvc/public/
    #
    # Par d√©faut, si ton projet est √† la racine de ton serveur (www/public),
    # tu peux laisser la ligne comment√©e.
    #
    # RewriteBase /


    # ------------------------------------------------------
    # üö∑ Conditions : ne pas r√©√©crire les fichiers ou dossiers r√©els
    # ------------------------------------------------------
    # Ces lignes disent √† Apache :
    # "Si le chemin demand√© correspond √† un fichier (-f)
    #  OU √† un dossier (-d), ne fais rien (ne redirige pas)."
    #
    # Exemple : /assets/css/style.css ‚Üí doit √™tre servi tel quel.
    RewriteCond %{REQUEST_FILENAME} -f [OR]
    RewriteCond %{REQUEST_FILENAME} -d
    RewriteRule ^ - [L]   # [L] = Last rule (arr√™te ici)


    # ------------------------------------------------------
    # üöÄ Redirection g√©n√©rale : tout le reste vers index.php
    # ------------------------------------------------------
    # Si la ressource n‚Äôexiste pas, Apache redirige vers index.php.
    #
    # Exemple :
    #   URL : /article/show/5
    #   ‚§∑ Apache ne trouve pas de dossier /article
    #   ‚§∑ Il redirige donc la requ√™te vers index.php
    #
    # L‚Äôoption [QSA] ("Query String Append") conserve les param√®tres GET,
    # par exemple ?page=2 ‚Üí reste attach√© √† la requ√™te.
    RewriteRule ^ index.php [L,QSA]

</IfModule>


# ============================================================================
# üß† R√©sum√© :
# ----------------------------------------------------------------------------
# 1Ô∏è‚É£ On d√©sactive Multiviews ‚Üí pas d‚Äôambigu√Øt√©s avec les fichiers PHP.
# 2Ô∏è‚É£ On active mod_rewrite ‚Üí moteur de redirection d‚ÄôApache.
# 3Ô∏è‚É£ On ignore les fichiers/dossiers r√©els (images, CSS, JS...).
# 4Ô∏è‚É£ On redirige toutes les autres requ√™tes vers index.php,
#    qui se chargera d‚Äôappeler le bon contr√¥leur/action.
# ============================================================================
